import React, { useState, useEffect } from "react";
import { Drawer, List, ListItem, ListItemText } from "@mui/material";
import MenuIcon from "@mui/icons-material/Menu";
import Head from "next/head";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import useWindowDimensions from "../utils/useWindowDimensions";
import dynamic from "next/dynamic";
import { signOut } from "next-auth/react";
import { Button } from "@material-tailwind/react";
import Image from "next/image";
// import the icons
import DashboardIcon from "@mui/icons-material/Dashboard";
import ShoppingCart from "@mui/icons-material/ShoppingCart";
import Inventory2Icon from "@mui/icons-material/Inventory2";
import PersonIcon from "@mui/icons-material/Person";
import AttachMoneyIcon from "@mui/icons-material/AttachMoney";

function AdminLayout({ title, children }) {
    const [isDrawerOpen, setIsDrawerOpen] = useState(false);
    const { height, width } = useWindowDimensions();
    const [isPortrait, setIsPortrait] = useState(height > width);

    const toggleDrawer = () => {
        setIsDrawerOpen(!isDrawerOpen);
    };

    const handleLogout = () => {
        signOut({ callbackUrl: "/admin" });
    };

    useEffect(() => {
        setIsPortrait(height > width);
    }, [height, width]);

    const activePath =
        typeof window !== "undefined" ? window.location.pathname : "";

    return (
        <>
            <ToastContainer position="bottom-center" />

            <Head>
                <title>{title}</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            {/* Mobile Navbar */}
            {isPortrait && (
                <div className="flex justify-between p-4 bg-gray-800 text-white shadow-md">
                    <h1 className="font-semibold">{title}</h1>
                    <MenuIcon onClick={toggleDrawer} />
                </div>
            )}

            <div className="flex">
                <Drawer
                    open={isDrawerOpen}
                    onClose={toggleDrawer}
                    variant={isPortrait ? "temporary" : "permanent"}>
                    <div className="flex flex-col items-center justify-center mt-6">
                        <h1 className="text-xl mb-4">Admin Panel</h1>
                        <Image
                            src="/images/cabsfour_logo_home.png"
                            className="object-contain mb-4" // Added a little margin-bottom
                            alt="logo"
                            width={100}
                            height={100}
                        />
                    </div>

                    <List>
                        {[
                            {
                                path: "/admin/dashboard",
                                label: "Dashboard",
                                icon: <DashboardIcon />,
                            },
                            {
                                path: "/admin/orders",
                                label: "Orders",
                                icon: <ShoppingCart />,
                            },
                            {
                                path: "/admin/products",
                                label: "Products",
                                icon: <Inventory2Icon />,
                            },
                            {
                                path: "/admin/refunds",
                                label: "Refund/Transfer",
                                icon: <AttachMoneyIcon />,
                            },
                            {
                                path: "/admin/users",
                                label: "Users",
                                icon: <PersonIcon />,
                            },
                        ].map((item) => (
                            <ListItem
                                key={item.path}
                                component="a"
                                href={item.path}
                                className="hover:bg-gray-700 transition ease-in-out duration-200 py-2"
                                style={{
                                    backgroundColor:
                                        activePath === item.path
                                            ? "rgba(255, 99, 71)"
                                            : "transparent",
                                    color:
                                        activePath === item.path
                                            ? "white"
                                            : "black",
                                }}>
                                {item.icon && (
                                    <div className="mr-3">{item.icon}</div>
                                )}
                                <ListItemText
                                    primary={item.label}
                                    className="text-lg"
                                />{" "}
                            </ListItem>
                        ))}
                    </List>

                    <div className="mt-auto py-6 px-4">
                        <Button
                            variant="contained"
                            color="primary"
                            fullWidth
                            onClick={handleLogout}>
                            Logout
                        </Button>
                    </div>
                </Drawer>

                <div
                    className={`flex-grow p-4 overflow-x-auto ${
                        isPortrait ? "ml-0" : "ml-48"
                    } `}>
                    {children}
                </div>
            </div>
        </>
    );
}

export default dynamic(() => Promise.resolve(AdminLayout));
